// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PLF;

#nullable disable

namespace PLF.Migrations
{
    [DbContext(typeof(StarshipContext))]
    partial class StarshipContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EngineerStarship", b =>
                {
                    b.Property<int>("EngineersEngineerID")
                        .HasColumnType("int");

                    b.Property<int>("StarshipsStarshipID")
                        .HasColumnType("int");

                    b.HasKey("EngineersEngineerID", "StarshipsStarshipID");

                    b.HasIndex("StarshipsStarshipID");

                    b.ToTable("EngineerStarship");
                });

            modelBuilder.Entity("PLF.Captain", b =>
                {
                    b.Property<int>("CaptainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaptainID"));

                    b.Property<string>("CaptainName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CaptainID");

                    b.ToTable("Captains");
                });

            modelBuilder.Entity("PLF.Component", b =>
                {
                    b.Property<int>("ComponentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComponentID"));

                    b.Property<int?>("StarshipID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComponentID");

                    b.HasIndex("StarshipID");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("PLF.Engineer", b =>
                {
                    b.Property<int>("EngineerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EngineerID"));

                    b.Property<string>("EngineerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EngineerID");

                    b.ToTable("Engineer");
                });

            modelBuilder.Entity("PLF.Starship", b =>
                {
                    b.Property<int>("StarshipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StarshipID"));

                    b.Property<int?>("CaptainID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StarshipID");

                    b.HasIndex("CaptainID");

                    b.ToTable("Starships");
                });

            modelBuilder.Entity("EngineerStarship", b =>
                {
                    b.HasOne("PLF.Engineer", null)
                        .WithMany()
                        .HasForeignKey("EngineersEngineerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PLF.Starship", null)
                        .WithMany()
                        .HasForeignKey("StarshipsStarshipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PLF.Component", b =>
                {
                    b.HasOne("PLF.Starship", "Starship")
                        .WithMany("Components")
                        .HasForeignKey("StarshipID");

                    b.Navigation("Starship");
                });

            modelBuilder.Entity("PLF.Starship", b =>
                {
                    b.HasOne("PLF.Captain", "Captain")
                        .WithMany("Starships")
                        .HasForeignKey("CaptainID");

                    b.Navigation("Captain");
                });

            modelBuilder.Entity("PLF.Captain", b =>
                {
                    b.Navigation("Starships");
                });

            modelBuilder.Entity("PLF.Starship", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
